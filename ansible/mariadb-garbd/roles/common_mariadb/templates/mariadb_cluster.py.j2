#!/usr/bin/env python

import os
import copy
import ConfigParser
import time


ROOT_PATH = os.path.dirname(os.path.abspath(__file__))
CONFIG_PATH = os.path.join(ROOT_PATH, "mariadb_cluster.cfg")


def analyse_config(config_path):
    cf = ConfigParser.ConfigParser()
    cf.read(config_path)
    # Sections for all configurations
    default = {}
    default = dict(cf.items("default"))
    return default


def check_mysql_ports():
    #s1 = int(os.popen("ssh %s netstat -lntp | grep 3306 | wc -l"
    #                  % first_node).readlines()[0].strip())
    #s2 = int(os.popen("ssh %s netstat -lntp | grep 4567 | wc -l"
    #                  % first_node).readlines()[0].strip())
    pass


def main():
    params = analyse_config(CONFIG_PATH)
    all_nodes = params.get("all_nodes", "").split(',')
    if len(all_nodes) < 1:
        print "No enough nodes provided.Do not set cluster!"
        return
    first_node = all_nodes[0]
    other_nodes = copy.deepcopy(all_nodes)
    other_nodes.remove(first_node)
    if len(other_nodes):
        other_nodes_str = ','.join(other_nodes)
    else:
        other_nodes_str = ""
    os.system("ssh %s sed -i s/^wsrep_node_address.*/wsrep_node_address=%s/g "
              "/tmp/galear.cnf" % (first_node, first_node))
    os.system("ssh %s cp /tmp/galear.cnf /etc/my.cnf.d/galear.cnf"
              % first_node)
    if len(all_nodes) == 1:
        os.system("ssh %s sed -i 's/RING_NEXT_IP//g' "
                  "/etc/my.cnf.d/galear.cnf" % first_node)
        os.system("ssh %s service mariadb start --wsrep-new-cluster" % first_node)
        return
    os.system("ssh %s sed -i 's/RING_NEXT_IP/%s/g' /etc/my.cnf.d/galear.cnf"
              % (first_node, other_nodes_str))
    # Start wsrep on first node
    print "Now Starting New Cluster..."
    os.system("ssh %s service mariadb start --wsrep-new-cluster" % first_node)
    time.sleep(10)
    # Add other nodes to cluster
    ring_len = len(all_nodes)
    for i in range(ring_len):
        cur_node = all_nodes[i]
#        next_node = all_nodes[i-1]
        other_nodes = copy.deepcopy(all_nodes)
        other_nodes.remove(cur_node)
        next_node = ','.join(other_nodes)
        print "Now Starting mariadb on %s..." % cur_node
        os.system("ssh %s sed -i s/^wsrep_node_address.*/wsrep_node_address"
                  "=%s/g /tmp/galear.cnf" % (cur_node, cur_node))
        os.system("ssh %s cp /tmp/galear.cnf /etc/my.cnf.d/galear.cnf"
                  % cur_node)
        os.system("ssh %s sed -i 's/RING_NEXT_IP/%s/g' /etc/my.cnf.d/galear.cnf" % (cur_node, next_node))
        os.system("ssh %s service mariadb start" % cur_node)
        time.sleep(10)

#    os.system("ssh %s cp /tmp/wsrep.cnf /etc/mysql/conf.d/wsrep.cnf"
#              % first_node)
#    os.system("ssh %s sed -i 's/RING_NEXT_IP/%s/g' /etc/mysql/conf.d/wsrep.cnf"
#              % (first_node, all_nodes[-1]))
    # Start wsrep again on first node to build the ring
    print "Now Starting New Cluster..."
    os.system("ssh %s service mariadb restart" % first_node)
    time.sleep(10)

    for node in all_nodes:
        os.system("ssh %s service xinetd restart" % node)

if __name__ == "__main__":
    main()
